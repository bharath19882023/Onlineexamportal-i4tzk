app Onlineexamportal {
  wasp: {
    version: "^0.13.0"
  },
  title: "Onlineexamportal",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id    Int    @id @default(autoincrement())
    exams Exam[]
psl=}

entity Exam {=psl
    id        Int        @id @default(autoincrement())
    title     String
    questions Question[]
    user      User       @relation(fields: [userId], references: [id])
    userId    Int
psl=}

entity Question {=psl
    id      Int    @id @default(autoincrement())
    content String
    answer  String
    exam    Exam   @relation(fields: [examId], references: [id])
    examId  Int
psl=}

action startExam {
  fn: import { startExam } from "@src/actions.js",
  entities: [User, Exam]
}

action submitAnswer {
  fn: import { submitAnswer } from "@src/actions.js",
  entities: [User, Exam, Question]
}

query getUserExams {
  fn: import { getUserExams } from "@src/queries.js",
  entities: [User, Exam]
}

query getExam {
  fn: import { getExam } from "@src/queries.js",
  entities: [Exam, User]
}

route ExamListRoute { path: "/exams", to: ExamListPage }
page ExamListPage {
  component: import ExamListPage from "@src/pages/ExamList.jsx",
  authRequired: true
}

route ExamRoute { path: "/exam/:examId", to: ExamPage }
page ExamPage {
  component: import ExamPage from "@src/pages/Exam.jsx",
  authRequired: true
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: true
}